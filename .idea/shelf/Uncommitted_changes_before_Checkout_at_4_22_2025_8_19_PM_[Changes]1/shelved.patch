Index: src/main/java/org/Game/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.Game;\r\n\r\nimport entity.Player;\r\nimport object.SuperObject;\r\nimport tile.TileManager;\r\nimport javax.swing.JPanel;\r\nimport java.awt.*;\r\n\r\n//inherit JPanel, an empty container\r\n//interface Runnable inherited to use run method for thread timer\r\npublic class GamePanel extends JPanel implements Runnable{\r\n\r\n    //bitmap default tile size\r\n    final int originalTileSize = 16;\r\n    final int scale = 3;\r\n\r\n    public final int tileSize = originalTileSize * scale;\r\n    public final int maxScreenCol = 16;\r\n    public final int maxScreenRow = 12;\r\n    public final int screenWidth = tileSize * maxScreenCol;\r\n    public final int screenHeight = tileSize * maxScreenRow;\r\n\r\n    public final int maxWorldCol = 50;\r\n    public final int maxWorldRow = 50;\r\n    public final int worldWidth = tileSize * maxWorldCol;\r\n    public final int worldHeight = tileSize * maxWorldRow;\r\n\r\n    //default fps size\r\n    public int FPS = 60;\r\n\r\n    TileManager tileM = new TileManager(this);\r\n    KeyHandler keyH = new KeyHandler();\r\n    Thread gameThread;\r\n    public CollisionChecker cChecker = new CollisionChecker(this);\r\n    public UI ui = new UI(this);\r\n    public Player player = new Player(this, keyH);\r\n    public SuperObject obj[] = new SuperObject[10];\r\n\r\n    public GamePanel()\r\n    {\r\n        //JPanel methods are called\r\n        this.setPreferredSize(new Dimension(screenWidth, screenHeight));\r\n        this.setBackground(Color.black);\r\n        this.setDoubleBuffered(true);\r\n        this.addKeyListener(keyH);\r\n        this.setFocusable(true);\r\n    }\r\n\r\n    public void startGameThread(){\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n    }\r\n    @Override\r\n    public void run() {\r\n        double drawInterval = (double) 1000000000 / FPS; //16666666.66\r\n        double delta = 0;\r\n        long lastTime = System.nanoTime();\r\n        long currentTime;\r\n\r\n        while(gameThread != null){\r\n            currentTime = System.nanoTime();\r\n            delta += (currentTime - lastTime) / drawInterval;\r\n            lastTime = currentTime;\r\n\r\n            if(delta >= 1){\r\n                update();\r\n                repaint();\r\n                delta--;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void update(){\r\n        player.update();\r\n    }\r\n\r\n    public void paintComponent(Graphics g){\r\n        super.paintComponent(g);\r\n        Graphics2D g2 = (Graphics2D) g;\r\n\r\n        // Map\r\n        tileM.draw(g2);\r\n\r\n        // PLAYER\r\n        player.draw(g2);\r\n\r\n        // UI\r\n        ui.draw(g2);\r\n\r\n        g2.dispose();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/Game/GamePanel.java b/src/main/java/org/Game/GamePanel.java
--- a/src/main/java/org/Game/GamePanel.java	(revision 385aca45bc9fdd25957b4188e43847d19c671975)
+++ b/src/main/java/org/Game/GamePanel.java	(date 1745370846213)
@@ -26,7 +26,7 @@
     public final int worldHeight = tileSize * maxWorldRow;
 
     //default fps size
-    public int FPS = 60;
+    public int FPS = 120;
 
     TileManager tileM = new TileManager(this);
     KeyHandler keyH = new KeyHandler();
