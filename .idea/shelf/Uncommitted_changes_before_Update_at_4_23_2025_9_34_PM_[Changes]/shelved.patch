Index: src/main/java/monster/MON_Google.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package monster;\r\n\r\nimport entity.Entity;\r\nimport org.Game.GamePanel;\r\nimport java.awt.*;\r\nimport java.util.Random;\r\n\r\npublic class MON_Google extends Entity{\r\n    public MON_Google(GamePanel gp)\r\n    {\r\n        super(gp);\r\n\r\n        name = \"Google\";\r\n        type = 2; // sets type to monster\r\n        speed = 1;\r\n        maxLife = 4;\r\n        life = maxLife;\r\n\r\n        solidArea = new Rectangle(1,1,46,46); // Put same values as player for hitbox Rectangle, may need changes\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n    }\r\n\r\n    public void getImage()\r\n    {\r\n        up1 = setup(\"/monster/Google\"); // sets the image to be Google at all times.\r\n        up2 = up1;\r\n\r\n        down1 = setup(\"/monster/Google\");\r\n        down2 = down1;\r\n\r\n        right1 = setup(\"/monster/Google\");\r\n        right2 = right1;\r\n\r\n        left1 = setup(\"/monster/Google\");\r\n        left2 = left1;\r\n    }\r\n\r\n    public void setAction()\r\n    {\r\n        actionLockCounter++;\r\n\r\n        if(actionLockCounter == 120)\r\n        {\r\n            Random random = new Random();\r\n            int i = random.nextInt(4) + 1; // grabs random number between 1-4\r\n\r\n            switch(i)\r\n            {\r\n                case 1: direction = \"up\"; break;\r\n                case 2: direction = \"down\"; break;\r\n                case 3: direction = \"right\"; break;\r\n                case 4: direction = \"left\"; break;\r\n            }\r\n\r\n            actionLockCounter = 0;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/monster/MON_Google.java b/src/main/java/monster/MON_Google.java
--- a/src/main/java/monster/MON_Google.java	(revision b7de558307e15b930192a18ccbc95dd8a52f79a2)
+++ b/src/main/java/monster/MON_Google.java	(date 1745461953953)
@@ -23,17 +23,17 @@
 
     public void getImage()
     {
-        up1 = setup("/monster/Google"); // sets the image to be Google at all times.
-        up2 = up1;
-
-        down1 = setup("/monster/Google");
-        down2 = down1;
-
-        right1 = setup("/monster/Google");
-        right2 = right1;
-
-        left1 = setup("/monster/Google");
-        left2 = left1;
+//        up1 = setup("/monster/Google"); // sets the image to be Google at all times.
+//        up2 = up1;
+//
+//        down1 = setup("/monster/Google");
+//        down2 = down1;
+//
+//        right1 = setup("/monster/Google");
+//        right2 = right1;
+//
+//        left1 = setup("/monster/Google");
+//        left2 = left1;
     }
 
     public void setAction()
Index: src/main/java/entity/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entity;\r\n\r\nimport org.Game.GamePanel;\r\nimport org.Game.KeyHandler;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\n\r\n//character class\r\npublic class Player extends Entity{\r\n\r\n    // GamePanel gP; Game Panel now stored in Entity\r\n    KeyHandler keyH;\r\n\r\n    public final int screenX;\r\n    public final int screenY;\r\n    public int standCounter = 0;\r\n    boolean moving = false;\r\n    int pixelCounter = 0;\r\n\r\n    public Player(GamePanel gP, KeyHandler keyH){\r\n        super(gP);\r\n\r\n        this.keyH = keyH;\r\n\r\n        screenX = gP.screenWidth/2 - (gP.tileSize/2);\r\n        screenY = gP.screenHeight/2 - (gP.tileSize/2);\r\n\r\n        solidArea = new Rectangle(1,1, 46, 46);\r\n\r\n        setDefaultValues();\r\n        getPlayerImg();\r\n    }\r\n\r\n    public void setDefaultValues(){\r\n        worldX = gp.tileSize * 23;\r\n        worldY = gp.tileSize * 21;\r\n        speed = 4;\r\n        direction = \"down\";\r\n    }\r\n\r\n    public void getPlayerImg(){\r\n        try{\r\n            up1 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_up_1.png\"));\r\n            up2 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_up_2.png\"));\r\n            down1 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_down_1.png\"));\r\n            down2 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_down_2.png\"));\r\n            left1 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_left_1.png\"));\r\n            left2 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_left_2.png\"));\r\n            right1 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_right_1.png\"));\r\n            right2 = ImageIO.read(getClass().getResourceAsStream(\"/player/boy_right_2.png\"));\r\n\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void update(){\r\n        if(!moving) {\r\n            if (keyH.upPressed || keyH.downPressed ||\r\n                    keyH.leftPressed || keyH.rightPressed) {\r\n                if (keyH.upPressed) {\r\n                    direction = \"up\";\r\n                } else if (keyH.downPressed) {\r\n                    direction = \"down\";\r\n                } else if (keyH.leftPressed) {\r\n                    direction = \"left\";\r\n                } else if (keyH.rightPressed) {\r\n                    direction = \"right\";\r\n                }\r\n\r\n                moving = true;\r\n                collisionOn = false;\r\n                gp.cChecker.checkTile(this);\r\n\r\n            } else {\r\n                standCounter++;\r\n\r\n                if (standCounter == 20) {\r\n                    spriteNum = 1;\r\n                    standCounter = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(moving){\r\n            if(!collisionOn){\r\n                switch(direction){\r\n                    case \"up\":\r\n                        worldY -= speed;\r\n                        break;\r\n                    case \"down\":\r\n                        worldY += speed;\r\n                        break;\r\n                    case \"left\":\r\n                        worldX -= speed;\r\n                        break;\r\n                    case \"right\":\r\n                        worldX += speed;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            spriteCounter++;\r\n            if(spriteCounter > 12){\r\n                if(spriteNum == 1){\r\n                    spriteNum = 2;\r\n                } else if(spriteNum == 2){\r\n                    spriteNum = 1;\r\n                }\r\n                    spriteCounter = 0;\r\n                }\r\n\r\n                pixelCounter += speed;\r\n            if(pixelCounter == 48){\r\n                moving = false;\r\n                pixelCounter = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void draw(Graphics2D g2){\r\n        BufferedImage image = null;\r\n        switch (direction){\r\n            case \"up\":\r\n                if(spriteNum == 1){\r\n                    image = up1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = up2;\r\n                }\r\n                break;\r\n            case \"down\":\r\n                if(spriteNum == 1) {\r\n                    image = down1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = down2;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                if(spriteNum == 1) {\r\n                    image = left1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = left2;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if(spriteNum == 1) {\r\n                    image = right1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = right2;\r\n                }\r\n                break;\r\n        }\r\n        g2.drawImage(image, screenX, screenY, gp.tileSize, gp.tileSize, null);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/entity/Player.java b/src/main/java/entity/Player.java
--- a/src/main/java/entity/Player.java	(revision b7de558307e15b930192a18ccbc95dd8a52f79a2)
+++ b/src/main/java/entity/Player.java	(date 1745461977384)
@@ -2,6 +2,7 @@
 
 import org.Game.GamePanel;
 import org.Game.KeyHandler;
+import org.Game.UtilityTool;
 
 import javax.imageio.ImageIO;
 import java.awt.*;
@@ -11,7 +12,7 @@
 //character class
 public class Player extends Entity{
 
-    // GamePanel gP; Game Panel now stored in Entity
+
     KeyHandler keyH;
 
     public final int screenX;
@@ -22,7 +23,6 @@
 
     public Player(GamePanel gP, KeyHandler keyH){
         super(gP);
-
         this.keyH = keyH;
 
         screenX = gP.screenWidth/2 - (gP.tileSize/2);
@@ -35,27 +35,28 @@
     }
 
     public void setDefaultValues(){
-        worldX = gp.tileSize * 23;
-        worldY = gp.tileSize * 21;
-        speed = 4;
+        worldX = gP.tileSize * 23;
+        worldY = gP.tileSize * 21;
+        speed = 4 * (60.0/gP.FPS);
         direction = "down";
+
+        maxLife = 8;
+        life = maxLife;
     }
 
     public void getPlayerImg(){
-        try{
-            up1 = ImageIO.read(getClass().getResourceAsStream("/player/boy_up_1.png"));
-            up2 = ImageIO.read(getClass().getResourceAsStream("/player/boy_up_2.png"));
-            down1 = ImageIO.read(getClass().getResourceAsStream("/player/boy_down_1.png"));
-            down2 = ImageIO.read(getClass().getResourceAsStream("/player/boy_down_2.png"));
-            left1 = ImageIO.read(getClass().getResourceAsStream("/player/boy_left_1.png"));
-            left2 = ImageIO.read(getClass().getResourceAsStream("/player/boy_left_2.png"));
-            right1 = ImageIO.read(getClass().getResourceAsStream("/player/boy_right_1.png"));
-            right2 = ImageIO.read(getClass().getResourceAsStream("/player/boy_right_2.png"));
+
+        up1 = setup("boy_up_1");
+        up2 = setup("boy_up_2");
+        down1 = setup("boy_down_1");
+        down2 = setup("boy_down_2");
+        left1 = setup("boy_left_1");
+        left2 = setup("boy_left_2");
+        right1 = setup("boy_right_1");
+        right2 = setup("boy_right_2");
 
-        } catch(IOException e){
-            e.printStackTrace();
-        }
     }
+
 
     public void update(){
         if(!moving) {
@@ -73,7 +74,7 @@
 
                 moving = true;
                 collisionOn = false;
-                gp.cChecker.checkTile(this);
+                gP.cChecker.checkTile(this);
 
             } else {
                 standCounter++;
@@ -104,7 +105,7 @@
             }
 
             spriteCounter++;
-            if(spriteCounter > 12){
+            if(spriteCounter > gP.FPS/5){
                 if(spriteNum == 1){
                     spriteNum = 2;
                 } else if(spriteNum == 2){
@@ -157,6 +158,8 @@
                 }
                 break;
         }
-        g2.drawImage(image, screenX, screenY, gp.tileSize, gp.tileSize, null);
+        g2.drawImage(image, screenX, screenY, null);
+
     }
+
 }
